// Introdução ao ambiente para poder rodar typescript
// NPM -> Node Package Manager

// para iniciar um projeto com npm pode usar os comandos
// npm init (no diretorio)
// npm init -y -> para pular as configuracoes especificas e ser automaticao
// depois de dar esse comando vai ser criado o arquivo package.json com o 
// que foi definido

// detalhe: o arquivo criado so vai ser o package.json, nao 
// terao outros

// package.json define as dependencias, mas nao exatamente bate
// o martelo para definir essas dependencias, tendo que usar o package-lock.json

// como realmente instalar essas dependencias?
// npm install

// vai criar automaticamente o package-lock.json para falar que as
// dependencias vao ser baixados

// para rodar vai ser usado os comandos:
// node src/code.ts (node nome_do_arquivo.ts)
// vai funcionar porque embora a extencao seja typescript, o codigo é todo javascript

// se tiver com codigo realmente typescript ou rodar os testes que foram 
// definidos (npm test || npm run jest) vai ter que usar
// npm run test
// npm install

// vai ser criado o arquivo de modulos (node_modules) e vai poder rodar
// sem maiores problemas


{
    "name": "ria-example",
    "version": "1.0.0",
    "devDependencies": {
        "@types/jest": "^30.0.0",
        "@types/node": "^24.5.2",
        "jest": "^30.1.3", // Dependencia para rodar testes
        "ts-jest": "^29.4.4", 
        "ts-node": "^10.9.2", 
        "typescript": "^5.9.2" // Dependencia do typescript
    },
    "scripts": {
        "test": "jest"
    }
}
// Somente a definicao dessas bibliotecas nao seriam 
// suficientes, tem que colocar a configuracao adicional
// para realmente funcionar

// Definição do jest.config.ts e dp tsconfig.json para 
// poder usar as dependencias